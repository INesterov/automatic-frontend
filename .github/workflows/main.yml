# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use Node.js [16.x]
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: yarn install
      - run: yarn build
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: inesterov/automatic-back:latest
  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      -
        name: Executing remote  command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker image rm inesterov/automatic-back --force
            docker stop automatic-back
            docker rm automatic-back
            docker run --name automatic-back -p 443:443 -p 3000:3001 -d inesterov/automatic-back